// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role Role @default(OWNER)
  workspaces Workspace[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workspace {
  id String @id @default(uuid())
  name String
  users User[]
  services Service[]

  subdomain String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id String @id @default(uuid())
  name String
  domain String

  expectedText String?
  expectedStatus Int

  method String
  body String?
  headers String? @db.Text
  maxLatency Int

  checkInterval Int
  lastCheck DateTime @default(now())

  workspaceId String
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  hits Hit[]
  failures Failure[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hit {
  id String @id @default(uuid())
  latency Int

  serviceId String
  service Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}

model Failure {
  id String @id @default(uuid())
  status Int?
  headers String? @db.Text
  body String? @db.LongText
  latency Int?

  autogeneratedMessage String
  reason FailureReason

  collectBody Boolean @default(false)
  collectHeaders Boolean @default(false)

  serviceId String
  service Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}

enum Role {
  OWNER
  ADMIN
  DEV
}

enum FailureReason {
  STATUS_CODE
  REQUEST_FAILURE
  EXPECTED_TEXT
  LATENCY
  NO_RESPONSE
}